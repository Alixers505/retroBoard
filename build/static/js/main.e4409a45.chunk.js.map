{"version":3,"sources":["wrappers/Home.js","components/Button.js","components/BoardCard.js","components/Column.js","components/Modal.js","components/Board.js","wrappers/NewBoard.js","wrappers/DemoBoard.js","wrappers/App.js","serviceWorker.js","index.js"],"names":["Home","id","class","href","Button","props","handleOnClick","setState","state","isActive","onClick","this","text","className","React","Component","defaultProps","Card","onEditClick","key","value","onDeleteClick","Column","handleOnAddClick","onAddClick","defaultValue","cards","length","map","card","onEditCard","onDeleteCard","title","Modal","handleChange","event","target","handleOnAddCardClick","onSubmit","header","onClose","type","rows","onChange","Board","openModal","colID","cardID","cardValue","modalOpen","currentColumnID","currentCardID","editCardValue","closeModal","addCard","uuidv4","column","columns","find","push","editCard","columnID","updateCard","prevState","filter","deleteCard","NewBoard","for","DemoBoard","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e4409a45.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <div id=\"home\">\n      <section>\n        <h2 id=\"pageTitle\">Welcome to RainbowRetro</h2>\n        <p class=\"subtitle\">\n          A cheerful application for conducting your retrospective meetings.\n        </p>\n      </section>\n      <div class=\"section-wrapper\">\n        <section class=\"section-card section-alert\">\n          <h3 class=\"alert\">Current Functionality</h3>\n          <ul>\n            <li>\n              Go to <a href=\"/new-board/\">New Board</a>\n            </li>\n            <li>Update page title</li>\n            <li>Update column title</li>\n            <li>Add (✚) new cards to each column</li>\n            <li>Edit (✎) the content of the cards</li>\n            <li>Delete (🗑) a card</li>\n          </ul>\n        </section>\n        <section class=\"section-card section-info\">\n          <h3 class=\"info\">Upcoming Iterations</h3>\n          <ul>\n            <li>Add the ability to choose the number of columns</li>\n            <li>Create demo board</li>\n            <li>Add print functionality</li>\n            <li>Add download functionality</li>\n          </ul>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nclass Button extends React.Component {\n  static defaultProps = {\n    text: 'New Button',\n    onClick: () => {\n      return;\n    },\n    className: ''\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = { isActive: false };\n  }\n  handleOnClick = () => {\n    this.setState(state => {\n      return {\n        isActive: !state.isActive\n      };\n    });\n    this.props.onClick();\n  };\n\n  render() {\n    const { text, className } = this.props;\n    return (\n      <button\n        onClick={this.handleOnClick}\n        className={`rb-btn ${className} ${this.state.isActive ? 'active' : ''}`}\n      >\n        {text}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from 'react';\n\nimport Button from './Button';\n\nclass Card extends React.Component {\n  static defaultProps = {\n    onEditClick: () => {\n      return;\n    },\n    onDeleteClick: () => {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <Button\n          onClick={this.props.onEditClick}\n          text=\"✎\"\n          className=\"edit-card\"\n        />\n        <div id={this.props.id} key={this.props.id}>\n          {this.props.value}\n        </div>\n        <Button\n          onClick={this.props.onDeleteClick}\n          text=\"🗑\"\n          className=\"delete-card\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './BoardCard';\nimport Button from './Button';\n\nclass Column extends React.Component {\n  static defaultProps = {\n    onAddClick: () => {\n      return;\n    },\n    onEditCard: () => {\n      return;\n    },\n    onDeleteCard: () => {\n      return;\n    },\n    title: '',\n    id: '',\n    cards: []\n  };\n  handleOnAddClick = () => {\n    // when button is clicked\n    // set currentColumnID to that column's ID\n    this.props.onAddClick(this.props.id);\n  };\n\n  render() {\n    return (\n      <div className=\"board-col\">\n        <div className=\"flex-row\">\n          <input className=\"col-title\" defaultValue=\"Column Title\" />\n          <Button\n            onClick={this.handleOnAddClick}\n            text=\"✚\"\n            className=\"add-card\"\n          />\n        </div>\n\n        {!!this.props.cards.length && (\n          <ul className=\"card-list\">\n            {this.props.cards.map(card => {\n              return (\n                <Card\n                  onEditClick={() =>\n                    this.props.onEditCard(this.props.id, card.id, card.value)\n                  }\n                  onDeleteClick={() =>\n                    this.props.onDeleteCard(this.props.id, card.id)\n                  }\n                  id={card.id}\n                  key={card.id}\n                  value={card.value}\n                />\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Column;\n","import React from 'react';\n\nimport Button from './Button';\n\nclass Modal extends React.Component {\n  static defaultProps = {\n    onClose: () => {\n      return;\n    },\n    onSubmit: () => {\n      return;\n    },\n    value: ''\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value,\n      header: 'Add a Comment'\n    };\n  }\n  handleChange = event => {\n    this.setState({ value: event.target.value });\n  };\n  handleOnAddCardClick = () => {\n    this.props.onSubmit(this.state.value);\n  };\n  render() {\n    return (\n      <div className=\"modal-wrapper\">\n        <div className=\"modal-box\">\n          <Button\n            className=\"close-modal\"\n            onClick={this.props.onClose}\n            text=\"𝗫\"\n          />\n          <label className=\"modal-title\">\n            <h3>{this.state.header}</h3>\n          </label>\n          <textarea\n            type=\"text\"\n            rows=\"6\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          <Button\n            className=\"submit-card\"\n            onClick={this.handleOnAddCardClick}\n            text=\"Submit\"\n            type=\"submit\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Column from './Column';\nimport Modal from './Modal';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalOpen: false,\n      columns: [\n        {\n          title: '',\n          id: uuidv4(),\n          cards: []\n        },\n        {\n          title: '',\n          id: uuidv4(),\n          cards: []\n        },\n        {\n          title: '',\n          id: uuidv4(),\n          cards: []\n        }\n      ],\n      currentColumnID: null,\n      currentCardID: null,\n      editCardValue: ''\n    };\n  }\n  openModal = (colID, cardID, cardValue) => {\n    this.setState(state => {\n      return {\n        modalOpen: true,\n        currentColumnID: colID,\n        currentCardID: cardID,\n        editCardValue: cardValue\n      };\n    });\n  };\n  closeModal = () => {\n    this.setState(state => {\n      return {\n        modalOpen: false\n      };\n    });\n  };\n  addCard = cardValue => {\n    const card = {\n      value: cardValue,\n      id: uuidv4()\n    };\n    // Find the column\n    const column = this.state.columns.find(column => {\n      return column.id === this.state.currentColumnID;\n    });\n\n    // add card to returned column\n    if (column != null) {\n      column.cards.push(card);\n    }\n\n    this.setState(state => {\n      return {\n        modalOpen: false,\n        currentColumnID: null\n      };\n    });\n  };\n  editCard = (columnID, cardID) => {\n    // Find the column\n    const column = this.state.columns.find(column => {\n      return column.id === columnID;\n    });\n    // Find the card\n    const card = column.cards.find(card => {\n      return card.id === cardID;\n    });\n\n    this.openModal(columnID, card.id, card.value);\n  };\n\n  updateCard = cardValue => {\n    this.setState(prevState => {\n      const { currentColumnID, currentCardID, columns } = prevState;\n      return {\n        columns: columns.map(column => {\n          if (column.id !== currentColumnID) {\n            return column;\n          }\n\n          return {\n            ...column,\n            cards: [\n              ...column.cards.filter(card => card.id !== currentCardID),\n              { id: currentCardID, value: cardValue }\n            ]\n          };\n        }),\n        modalOpen: false,\n        currentColumnID: null,\n        currentCardID: null,\n        editCardValue: ''\n      };\n    });\n  };\n\n  deleteCard = (columnID, cardID) => {\n    this.setState(prevState => ({\n      columns: prevState.columns.map(column => {\n        if (column.id !== columnID) {\n          return column;\n        }\n\n        return {\n          ...column,\n          cards: column.cards.filter(card => card.id !== cardID)\n        };\n      })\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"board\">\n          {this.state.columns.map(column => {\n            return (\n              <Column\n                onAddClick={this.openModal}\n                onEditCard={this.editCard}\n                onDeleteCard={this.deleteCard}\n                title={column.title}\n                id={column.id}\n                cards={column.cards}\n                key={column.id}\n              />\n            );\n          })}\n        </div>\n        {this.state.modalOpen && (\n          <Modal\n            onClose={this.closeModal}\n            value={this.state.editCardValue}\n            onSubmit={this.state.currentCardID ? this.updateCard : this.addCard}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\n\nimport Board from '../components/Board';\n\nconst NewBoard = () => {\n  return (\n    <div>\n      <h2 id=\"pageTitleWrapper\">\n        <label for=\"pageTitle\" />\n        <input id=\"pageTitle\" defaultValue=\"New Board\" />\n      </h2>\n      <Board />\n    </div>\n  );\n};\n\nexport default NewBoard;\n","import React from 'react';\n\nimport Board from '../components/Board';\n\nconst DemoBoard = () => {\n  return (\n    <div>\n      <h2 id=\"pageTitleWrapper\">\n        <label for=\"pageTitle\" />\n        <input id=\"pageTitle\" defaultValue=\"Demo Board\" />\n      </h2>\n      <Board />\n    </div>\n  );\n};\n\nexport default DemoBoard;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nimport Home from './Home';\nimport NewBoard from './NewBoard';\nimport DemoBoard from './DemoBoard';\n\nconst App = () => {\n  return (\n    <Router>\n      <div id=\"page-wrapper\">\n        <header>\n          <nav>\n            <div>\n              <h1>\n                <Link to=\"/\" id=\"logo\">\n                  RainbowRetro\n                </Link>\n              </h1>\n            </div>\n            <ul>\n              <li>\n                <Link to=\"/new-board/\">New Board</Link>\n              </li>\n              <li>\n                <Link to=\"/demo-board/\">Demo Board</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/new-board/\" component={NewBoard} />\n            <Route path=\"/demo-board/\" component={DemoBoard} />\n          </Switch>\n        </main>\n        <footer>\n          <nav>\n            Created by:\n            <a href=\"https://github.com/Alixers505\">Alysha Buselt</a>\n            🐻\n          </nav>\n        </footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sass/styles.scss';\nimport App from './wrappers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}